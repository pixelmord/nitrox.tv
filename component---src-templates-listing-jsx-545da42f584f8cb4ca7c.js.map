{"version":3,"sources":["webpack:///./src/templates/listing.jsx"],"names":["Listing","renderPaging","this","props","pageContext","currentPageNum","pageCount","prevPage","nextPage","isFirstPage","isLastPage","className","to","Array","map","_val","index","pageNum","key","render","postEdges","data","allMarkdownRemark","edges","title","config","siteTitle","React","Component","listingQuery"],"mappings":"gmCASMA,E,kMACJC,aAAA,WAAgB,IAAD,EACyBC,KAAKC,MAAMC,YAAzCC,EADK,EACLA,eAAgBC,EADX,EACWA,UAClBC,EAAWF,EAAiB,GAAM,EAAI,IAA3B,KAAqCA,EAAiB,GAAtD,IACXG,EAAQ,KAAOH,EAAiB,GAAxB,IACRI,EAAiC,IAAnBJ,EACdK,EAAaL,IAAmBC,EAEtC,OACE,yBAAKK,UAAU,qBACXF,GAAe,kBAAC,OAAD,CAAMG,GAAIL,GAAV,YAChB,EAAIM,MAAMP,IAAYQ,KAAI,SAACC,EAAMC,GAChC,IAAMC,EAAUD,EAAQ,EACxB,OACE,kBAAC,OAAD,CACEE,IAAG,gBAAkBD,EACrBL,GAAgB,IAAZK,EAAgB,IAAhB,IAA0BA,EAA1B,KAEHA,OAILP,GAAc,kBAAC,OAAD,CAAME,GAAIJ,GAAV,U,EAKtBW,OAAA,WACE,IAAMC,EAAYlB,KAAKC,MAAMkB,KAAKC,kBAAkBC,MAEpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,0BAAMf,UAAU,qBACd,kBAAC,IAAD,CAAaS,UAAWA,IACvBlB,KAAKD,kB,GApCM0B,IAAMC,WA2Cb5B,YAGR,IAAM6B,EAAY,c","file":"component---src-templates-listing-jsx-545da42f584f8cb4ca7c.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./listing.css\";\n\nclass Listing extends React.Component {\n  renderPaging() {\n    const { currentPageNum, pageCount } = this.props.pageContext;\n    const prevPage = currentPageNum - 1 === 1 ? \"/\" : `/${currentPageNum - 1}/`;\n    const nextPage = `/${currentPageNum + 1}/`;\n    const isFirstPage = currentPageNum === 1;\n    const isLastPage = currentPageNum === pageCount;\n\n    return (\n      <div className=\"paging-container\">\n        {!isFirstPage && <Link to={prevPage}>Previous</Link>}\n        {[...Array(pageCount)].map((_val, index) => {\n          const pageNum = index + 1;\n          return (\n            <Link\n              key={`listing-page-${pageNum}`}\n              to={pageNum === 1 ? \"/\" : `/${pageNum}/`}\n            >\n              {pageNum}\n            </Link>\n          );\n        })}\n        {!isLastPage && <Link to={nextPage}>Next</Link>}\n      </div>\n    );\n  }\n\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n\n    return (\n      <Layout>\n        <Helmet title={config.siteTitle} />\n        <SEO />\n        <main className=\"listing-container\">\n          <PostListing postEdges={postEdges} />\n          {this.renderPaging()}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default Listing;\n\n/* eslint no-undef: \"off\" */\nexport const listingQuery = graphql`\n  query ListingQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}